<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spacecore.mapper.review.ReviewMapper">

    <!-- ✅ 리뷰 등록 -->
    <insert id="insertReview">
        INSERT INTO reviews (id, user_id, room_id, rating, content, img, created_at)
        VALUES (seq_reviews.NEXTVAL, #{userId}, #{roomId}, #{rating}, #{content}, #{img}, SYSTIMESTAMP)
    </insert>

    <!-- ✅ 리뷰 목록 조회 -->
    <select id="findReviews" parameterType="map" resultType="com.spacecore.dto.review.ReviewResponseDTO">
        SELECT
        r.id AS id,
        u.name AS userName,
        r.room_id AS roomId,
        r.rating AS rating,
        r.content AS content,
        r.created_at AS createdAt,
        NULL AS imgUrl
        FROM reviews r
        JOIN users u ON r.user_id = u.id
        WHERE r.room_id = #{roomId}
        <if test="keyword != null and keyword != ''">
            AND LOWER(r.content) LIKE '%' || LOWER(#{keyword}) || '%'
        </if>
        <if test="userName != null and userName != ''">
            AND LOWER(u.name) LIKE '%' || LOWER(#{userName}) || '%'
        </if>
        <if test="rating != null">
            AND r.rating = #{rating}
        </if>
        ORDER BY r.created_at DESC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

    <!-- ✅ 리뷰 총 개수 카운트 -->
    <select id="countReviews" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        JOIN users u ON r.user_id = u.id
        WHERE r.room_id = #{roomId}
        <if test="keyword != null and keyword != ''">
            AND LOWER(r.content) LIKE '%' || LOWER(#{keyword}) || '%'
        </if>
        <if test="userName != null and userName != ''">
            AND LOWER(u.name) LIKE '%' || LOWER(#{userName}) || '%'
        </if>
        <if test="rating != null">
            AND r.rating = #{rating}
        </if>
    </select>

    <!-- ✅ 리뷰 요약 (평균 평점, 총 리뷰 수) -->
    <select id="getReviewSummary" resultType="com.spacecore.dto.review.ReviewSummaryDTO">
        SELECT
            NVL(ROUND(AVG(r.rating), 1), 0) AS avgRating,
            COUNT(*) AS totalCount
        FROM reviews r
        WHERE r.room_id = #{roomId}
    </select>

</mapper>
