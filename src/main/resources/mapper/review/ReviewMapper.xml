<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spacecore.mapper.review.ReviewMapper">

    <!-- =========================================================
         1. 리뷰 등록 (INSERT)
         ========================================================= -->
    <insert id="insertReview" parameterType="com.spacecore.dto.review.ReviewRequestDTO">
        INSERT INTO reviews (
            id, user_id, room_id, rating, content, img_url, created_at
        ) VALUES (
                     seq_reviews.NEXTVAL,
                     #{userId, jdbcType=NUMERIC},
                     #{roomId, jdbcType=NUMERIC},
                     #{rating, jdbcType=NUMERIC},
                     #{content, jdbcType=VARCHAR},
                     #{imgUrl, jdbcType=VARCHAR},
                     SYSTIMESTAMP
                 )
    </insert>

    <!-- =========================================================
         2. 리뷰 목록 조회 (검색 + 필터 + 페이징)
         ========================================================= -->
    <select id="findReviews" resultType="com.spacecore.dto.review.ReviewResponseDTO">
        SELECT
        r.id,
        u.name AS userName,
        r.room_id AS roomId,
        r.rating,
        r.content,
        r.img_url AS imgUrl,
        TO_CHAR(r.created_at, 'YYYY-MM-DD HH24:MI:SS') AS createdAt
        FROM reviews r
        <!-- ✅ LEFT JOIN 으로 변경 -->
        LEFT JOIN users u ON r.user_id = u.id
        WHERE 1=1
        <if test="roomId != null">
            AND r.room_id = #{roomId, jdbcType=NUMERIC}
        </if>
        <if test="keyword != null and keyword != ''">
            AND LOWER(r.content) LIKE '%' || LOWER(#{keyword}) || '%'
        </if>
        <if test="userName != null and userName != ''">
            AND LOWER(u.name) LIKE '%' || LOWER(#{userName}) || '%'
        </if>
        <if test="rating != null">
            AND r.rating = #{rating, jdbcType=NUMERIC}
        </if>
        ORDER BY r.created_at DESC
        OFFSET #{offset, jdbcType=INTEGER} ROWS FETCH NEXT #{limit, jdbcType=INTEGER} ROWS ONLY
    </select>

    <!-- =========================================================
         3. 리뷰 개수 조회 (페이징 total count)
         ========================================================= -->
    <select id="countReviews" resultType="int">
        SELECT COUNT(*)
        FROM reviews r
        LEFT JOIN users u ON r.user_id = u.id
        WHERE 1=1
        <if test="roomId != null">
            AND r.room_id = #{roomId, jdbcType=NUMERIC}
        </if>
        <if test="keyword != null and keyword != ''">
            AND LOWER(r.content) LIKE '%' || LOWER(#{keyword}) || '%'
        </if>
        <if test="userName != null and userName != ''">
            AND LOWER(u.name) LIKE '%' || LOWER(#{userName}) || '%'
        </if>
        <if test="rating != null">
            AND r.rating = #{rating, jdbcType=NUMERIC}
        </if>
    </select>

    <!-- =========================================================
         4. 리뷰 요약 (평균 별점 + 총 개수)
         ========================================================= -->
    <select id="getReviewSummary" resultType="com.spacecore.dto.review.ReviewSummaryDTO">
        SELECT
        ROUND(AVG(r.rating), 1) AS avgRating,
        COUNT(*) AS totalCount
        FROM reviews r
        WHERE 1=1
        <if test="roomId != null">
            AND r.room_id = #{roomId, jdbcType=NUMERIC}
        </if>
    </select>

    <!-- =========================================================
         5. 리뷰 상세조회
         ========================================================= -->
    <select id="findById" resultType="com.spacecore.dto.review.ReviewResponseDTO">
        SELECT
            r.id,
            u.name AS userName,
            r.room_id AS roomId,
            r.rating,
            r.content,
            r.img_url AS imgUrl,
            TO_CHAR(r.created_at, 'YYYY-MM-DD HH24:MI:SS') AS createdAt
        FROM reviews r
                 LEFT JOIN users u ON r.user_id = u.id
        WHERE r.id = #{reviewId, jdbcType=NUMERIC}
    </select>

</mapper>
